{"version":3,"sources":["SortingAlgo/Mergesort.jsx","SortingAlgo/Quicksort.jsx","SortingVisualizer/Slider.js","SortingVisualizer/SortingVisualizer.jsx","SortingAlgo/BubbleSort.jsx","App.js","index.js"],"names":["getMergeSortAnimation","array","animation","length","auxiArray","slice","MergeSortHelper","mainArray","start","end","mid","Math","floor","i","k","j","push","doMerge","partition","auxiarray","s","e","pivot","tmp","quicksort","makeStyles","root","width","valuetext","value","console","log","SortingVisualizer","props","mergeSort","animations","state","arrayBars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","makeAllBarsGreen","this","resetArray","min","max","random","makeAllBarsBlue","setState","n","flag","BubbleSort","getBubbleSortAnimation","oldposition","newposition","oldBarstyle","newBarstyle","currentPosition","getQuicksortanimation","index","oldstyle","newstyle","dummyanimation","curr","arrayLength","className","textAlign","justifyContent","alignItems","map","key","Button","margin","onClick","variant","disableElevation","quick","React","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.980c32fd.chunk.js","sourcesContent":["export function getMergeSortAnimation (array) {\r\n    const animation = []\r\n    if(array.length <= 1) return array\r\n    const auxiArray = array.slice();\r\n    MergeSortHelper(array,0,array.length-1,auxiArray,animation)\r\n    return animation\r\n}\r\n\r\nfunction MergeSortHelper(mainArray,start,end,auxiArray,animation,) {\r\n\r\n    if(start === end) return\r\n    const mid = Math.floor((start+end)/2)\r\n    MergeSortHelper(auxiArray,start,mid,mainArray,animation)\r\n    MergeSortHelper(auxiArray,mid+1,end,mainArray,animation)\r\n\r\n    doMerge(mainArray,start,mid,end,auxiArray,animation)\r\n}\r\n\r\nfunction doMerge(mainArray,start,mid,end,auxiArray,animation){\r\n    let i = start\r\n    let k = start\r\n    let j = mid+1\r\n\r\n    while(i<=mid && j<=end){\r\n        animation.push([i,j]) // to change color\r\n        animation.push([i,j]) // to revert color\r\n        if(auxiArray[i] <= auxiArray[j]){\r\n            animation.push([k,auxiArray[i]])\r\n            mainArray[k++] = auxiArray[i++]\r\n        }\r\n        else{\r\n            animation.push([k,auxiArray[i]])\r\n            mainArray[k++] = auxiArray[j++]\r\n        }\r\n    }\r\n    while(i<=mid){\r\n        animation.push([i,i])\r\n        animation.push([i,i])\r\n        animation.push([k,auxiArray[i]])\r\n        mainArray[k++] = auxiArray[i++]\r\n    }\r\n    while(j<=end){\r\n        animation.push([j,j])\r\n        animation.push([j,j])\r\n        animation.push([k,auxiArray[i]])\r\n        mainArray[k++] = auxiArray[j++]\r\n    }\r\n}\r\n","export function getQuicksortanimation (array) {\r\n        if(array.length <= 1) return array\r\n        const animation = []\r\n        const auxiarray = array.slice()\r\n        quicksort(auxiarray,0,array.length-1,animation)\r\n        console.log(array)\r\n        return animation\r\n}\r\n\r\nexport function partition(auxiarray,s,e,animation) {\r\n    let pivot = auxiarray[Math.floor((s+e)/2)]\r\n    let j = e;\r\n    let i = s;\r\n    while(i<=j) {\r\n      while(auxiarray[i] < pivot) i++;\r\n      while(auxiarray[j] > pivot) j--;\r\n        if(i<=j) {\r\n            let tmp = auxiarray[i]\r\n            auxiarray[i] = auxiarray[j]\r\n            auxiarray[j] = tmp\r\n\r\n            animation.push([i,j])\r\n            i++; j--;\r\n        }\r\n      }\r\n      return i;\r\n}\r\n   \r\n\r\nexport function quicksort(auxiarray,s,e,animation) {\r\n    var pivot\r\n    if(auxiarray.length > 1) {\r\n    pivot = partition(auxiarray,s,e,animation)\r\n    if(s<pivot-1) quicksort(auxiarray,s,pivot-1,animation);\r\n    if(pivot < e) quicksort(auxiarray,pivot,e,animation);\r\n    }\r\n    \r\n    return auxiarray\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 100,\r\n  },\r\n});\r\n\r\nexport function valuetext(value) {\r\n    console.log(value)\r\n    // return value\r\n    return `${value}`;\r\n  \r\n}\r\n\r\nexport default function DiscreteSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} style={{position:'absolute',left:'70px',top:'24px'}}>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n        Size of Array\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={50}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={50}\r\n        marks={true}\r\n        min={50}\r\n        max={300}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Sorting.css'\r\nimport {getMergeSortAnimation} from '../SortingAlgo/Mergesort'\r\nimport {getBubbleSortAnimation} from '../SortingAlgo/BubbleSort'\r\nimport {getQuicksortanimation} from '../SortingAlgo/Quicksort'\r\nimport {partition} from '../SortingAlgo/Quicksort'\r\nimport {quicksort} from '../SortingAlgo/Quicksort'\r\nimport { Button } from '@material-ui/core';\r\nimport {valuetext} from './Slider'\r\nconst SECONDARY_COLOR = 'red'\r\nconst PRIMARY_COLOR = 'skyblue'\r\nconst ANIMATION_SPEED_MS = 2\r\n\r\nconsole.log(\"V:\",valuetext())\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            array:[],\r\n        }\r\n    }\r\n    componentDidMount(){ // this func will run when we reload our page\r\n        this.resetArray()\r\n    }\r\n\r\n    resetArray(){\r\n        const array = []    \r\n        for(let i=0 ; i<200; i++){\r\n            array.push(randomGenerator(5,400))\r\n        }\r\n        this.makeAllBarsBlue()\r\n        this.setState({array})\r\n    }\r\n    \r\n    mergeSort = () => {\r\n    const animations = getMergeSortAnimation(this.state.array);\r\n     for (let i = 0; i < animations.length; ++i) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      let isColorChange = 0\r\n      if(i%3 !== 2) isColorChange = 1;\r\n      \r\n         \r\n      if (isColorChange) {\r\n        const [barOneIdx,barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n          // if(i === animations.length-1) this.makeAllBarsGreen();\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n     else {\r\n        setTimeout(() => {\r\n          const [barOneIdx,newHeight] = animations[i];\r\n          const barOneStylee = arrayBars[barOneIdx].style;\r\n          barOneStylee.height = `${newHeight}px`;\r\n          if(i === animations.length-1) this.makeAllBarsGreen();\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n     \r\n    }\r\n    \r\n  \r\n}\r\n    BubbleSort(){\r\n      \r\n      const animations = getBubbleSortAnimation(this.state.array)\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\")\r\n      for (let i = 0; i < animations.length; ++i) {\r\n        setTimeout(()=>{\r\n            const [oldposition,newposition] = animations[i]\r\n            const oldBarstyle = arrayBars[oldposition].style \r\n            const newBarstyle = arrayBars[newposition].style \r\n\r\n            var tmp = this.state.array[oldposition]\r\n            this.state.array[oldposition] = this.state.array[newposition] \r\n            this.state.array[newposition] = tmp\r\n\r\n            oldBarstyle.height = `${this.state.array[oldposition]}px`;\r\n            newBarstyle.height = `${this.state.array[newposition]}px`;\r\n\r\n            oldBarstyle.backgroundColor = \"red\";\r\n            newBarstyle.backgroundColor = \"green\";\r\n\r\n            var currentPosition = oldposition;\r\n          for (let j = 0; j < currentPosition; j++) {\r\n          var jBarStyle = arrayBars[j].style;\r\n          jBarStyle.backgroundColor = \"red\";\r\n       }\r\n         if(i === animations.length-1) {\r\n         var n = arrayBars.length;\r\n         for(let j=0;j<n;j++) {\r\n            arrayBars[j].style.backgroundColor = \"limegreen\"\r\n         }\r\n       }\r\n\r\n        },i*ANIMATION_SPEED_MS)\r\n    }\r\n  }\r\n\r\n  quick() {\r\n    const array = this.state.array\r\n    const animation = getQuicksortanimation(array)\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\")\r\n    for(let i=0;i<animation.length;i++)  {\r\n      setTimeout(()=> {\r\n        var [oldposition,newposition] = animation[i]\r\n        var oldstyle = arrayBars[oldposition].style\r\n        var newstyle = arrayBars[newposition].style\r\n        var index \r\n        var dummyanimation = []\r\n        if(array.length > 1) {\r\n          index = partition(array,0,array.length-1,dummyanimation)\r\n          if(index-1 > 0) quicksort(array,0,index-1,dummyanimation)\r\n          if(index < array.length) quicksort(array,index,array.length-1,dummyanimation)\r\n        }\r\n        oldstyle.height = `${this.state.array[oldposition]}px`;\r\n        newstyle.height = `${this.state.array[newposition]}px`;\r\n         \r\n        oldstyle.backgroundColor = \"green\";\r\n        newstyle.backgroundColor = \"red\";\r\n\r\n        var curr = oldposition\r\n        for(let i=0;i<curr;i++) {\r\n          arrayBars[i].style.backgroundColor = \"green\"\r\n        }\r\n        if (i === animation.length - 1) {\r\n          this.makeAllBarsGreen();\r\n        }\r\n      },i*ANIMATION_SPEED_MS)\r\n    }\r\n  }\r\n  makeAllBarsGreen() {\r\n    console.log(\"Sorted\");\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    var arrayLength = arrayBars.length;\r\n    for (let j = 0; j < arrayLength; j++) {\r\n      var jBarStyle = arrayBars[j].style;\r\n      jBarStyle.backgroundColor = \"limegreen\";\r\n    }\r\n  }\r\n  makeAllBarsBlue() {\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    var arrayLength = arrayBars.length;\r\n    for (let j = 0; j < arrayLength; j++) {\r\n      var jBarStyle = arrayBars[j].style;\r\n      jBarStyle.backgroundColor = \"skyblue\";\r\n    }\r\n  }\r\n    render(){\r\n        const {array} = this.state\r\n\r\n        return (\r\n           <>\r\n            <div className=\"main_container\">\r\n                  <h1 style = {{backgroundColor:\"lightpink\",color:\"black\",height:'70px',textAlign:\"center\",justifyContent:'center',alignItems:\"center\"}}>Sorting Algorithm Visualizer</h1>\r\n                {/* <Slider></Slider> */}\r\n                <div className=\"array-container\">\r\n                  {array.map((value,index)=>(\r\n                      <div className=\"array-bar\"  key = {index}\r\n                      style = {{backgroundColor : PRIMARY_COLOR,\r\n                      height : `${value}px`,\r\n                      \r\n                        }}\r\n                    >\r\n                    </div>\r\n                     ))}\r\n              <div className=\"main-btn\">\r\n                <Button className='btn' style={{margin:'3px'}}  onClick={()=>this.resetArray()}  variant=\"contained\" color=\"secondary\" disableElevation >\r\n                Generate New Array\r\n                </Button>\r\n                <Button className='btn' style={{margin:'3px'}} onClick={()=>this.mergeSort()}  variant=\"contained\" color=\"primary\" disableElevation >\r\n                Merge Sort\r\n                </Button>\r\n                <Button className='btn' style={{margin:'3px'}} onClick={()=>this.quick()}  variant=\"contained\" color=\"primary\" disableElevation >\r\n                Quick Sort\r\n                </Button>\r\n                <Button className='btn' style={{margin:'3px'}} onClick={()=>this.BubbleSort()}  variant=\"contained\" color=\"primary\" disableElevation >\r\n                Bubble Sort\r\n                </Button>\r\n              </div>\r\n              </div>\r\n            </div>\r\n           </>\r\n        )\r\n    }\r\n}\r\nfunction randomGenerator(min,max){\r\n    return Math.floor(Math.random() * (max-min+1)+min)\r\n}","export function getBubbleSortAnimation (array) {\r\n    if(array.length <= 1) return array\r\n    const auxiarray = array.slice()\r\n    const animation = []\r\n    BubbleSort(animation,auxiarray,auxiarray.length)\r\n    return animation\r\n}\r\n\r\nfunction BubbleSort(animation,array,n){\r\n   var flag;\r\n   do {\r\n    flag = false\r\n    for(let i = 0; i<n-1; i++) {\r\n        if(array[i] > array[i+1]) {\r\n            var tmp = array[i+1];\r\n            array[i+1] = array[i]\r\n            array[i] = tmp\r\n            animation.push([i,i+1])\r\n            // animation.push([i,i+1])\r\n            flag = true\r\n        }\r\n    }\r\n   } while(flag);\r\n}","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer.jsx'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n <App></App>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}